{"version":3,"sources":["components/LinkIcon.tsx","pages/Home/Home.tsx","constants/themes/colors.ts","pages/About/About.tsx","pages/Works/Works.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LinkIcon","IconProvider","link","color","href","target","rel","style","textDecoration","fontSize","Content","Layout","Title","Typography","defaultOptions","loop","autoplay","animationData","earth","rendererSettings","preserveAspectRatio","title","fontWeight","fontFamily","subTitle","marginTop","Footer","className","AiOutlineLinkedin","AiOutlineGithub","RiStackshareLine","FaQuora","Home","useState","animationFinish","setAnimationDone","appLogoClass","height","eventListeners","eventName","callback","options","backgroundColor","width","level","colors","Paragraph","homeTitleStyle","About","WorkRow","caption","Works","Header","navStyle","navWrapper","display","paddingBottomWidth","borderBottomWidth","App","current","setCurrent","padding","onClick","e","key","selectedKeys","mode","Item","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b96c95b7.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\n\ntype Props = {\n  IconProvider: ReactElement | any;\n  link: string;\n  color: string;\n};\n\nconst LinkIcon = ({ IconProvider, link, color }: Props) => (\n  <a\n    href={link}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    style={{ textDecoration: 'none' }}\n    // style={{ textDecoration: 'none' }}\n  >\n    <IconProvider style={{ fontSize: 40, color }} />\n  </a>\n);\n\nexport { LinkIcon };\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport '../../App.css';\nimport './home.css';\nimport Lottie from 'react-lottie';\nimport { AiOutlineGithub, AiOutlineLinkedin } from 'react-icons/ai';\nimport { RiStackshareLine } from 'react-icons/ri';\nimport { FaQuora } from 'react-icons/fa';\nimport { Layout, Typography } from 'antd';\n// import { colors } from '../../constants/themes/colors';\nimport earth from '../../assets/animations/hello-earth.json';\nimport { LinkIcon } from '../../components/LinkIcon';\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nconst defaultOptions = {\n  loop: false,\n  autoplay: true,\n  animationData: earth,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nconst title = {\n  color: '#211F1F',\n  fontWeight: 800,\n  fontSize: 52,\n  fontFamily: 'ArchivoBlack-Regular',\n  // height: 12,\n};\n\nconst subTitle = {\n  fontFamily: 'OpenSans-Regular',\n  marginTop: -20,\n};\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <LinkIcon\n      IconProvider={AiOutlineLinkedin}\n      link=\"https://www.linkedin.com/in/john-clifford-de-vera-511150159/\"\n      color=\"#0E76A8\"\n    />\n    <LinkIcon\n      IconProvider={AiOutlineGithub}\n      link=\"https://www.github.com/jayzyaj/\"\n      color=\"#211F1F\"\n    />\n    <LinkIcon\n      IconProvider={RiStackshareLine}\n      link=\"https://stackshare.io/jayzyaj/tech-stack\"\n      color=\"#0690FA\"\n    />\n    <LinkIcon\n      IconProvider={FaQuora}\n      link=\"https://www.quora.com/profile/Jayz-De-Vera/\"\n      color=\"#A82400\"\n    />\n  </div>\n);\n\nfunction Home() {\n  const [animationFinish, setAnimationDone] = useState<boolean>(false);\n  const handleAnimation = () => setAnimationDone(true);\n\n  let appLogoClass = '';\n  if (animationFinish) appLogoClass = 'Home-logo';\n  return (\n    <Content style={{ height: '100%' }} className=\"flex col-space-around\">\n      <div className={`flex home-logo ${appLogoClass}`}>\n        <Lottie\n          eventListeners={[\n            {\n              eventName: 'complete',\n              callback: () => handleAnimation(),\n            },\n          ]}\n          options={defaultOptions}\n          style={{ backgroundColor: 'transparent' }}\n          height={340}\n          width={340}\n        />\n      </div>\n      <div className=\"text-wrapper flex text-center flex-col margin-vertical-54\">\n        <Title style={title}>\n          I'm John Clifford de Vera\n        </Title>\n        <Title style={subTitle} level={2}>Software Engineer</Title>\n      </div>\n      <div className=\"footer-wrapper\">\n        <Footer />\n      </div>\n    </Content>\n  );\n}\n\nexport { Home };\n","const colors = {\n  primary: '#77dd77',\n  secondary: '#F8F8FF',\n  tertiary: '#e1b382',\n};\n\nexport { colors };\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport '../../App.css';\nimport './about.css';\nimport { Layout, Typography } from 'antd';\n// import { colors } from '../../constants/themes/colors';\nimport { colors } from '../../constants/themes/colors';\n\n// const meImage = require('../../assets/images/me.JPG');\n\nconst { Content } = Layout;\nconst { Title, Paragraph } = Typography;\n\nconst homeTitleStyle = {\n  color: '#211F1F',\n  fontWeight: 800,\n  fontFamily: 'ArchivoBlack-Regular',\n  // height: 12,\n};\n\nfunction About() {\n  return (\n    <Content className=\"flex col-space-around\">\n      <div className=\"flex home-logo mt-5\">\n        {/* <img className=\"image-profile\" src={meImage} alt=\"Profile\" /> */}\n      </div>\n      <div className=\"flex flex-col text-wrapper\">\n        <Title style={homeTitleStyle}>\n          About\n        </Title>\n        <Paragraph className=\"caption\">\n          Hi.\n          My name is John Clifford de Vera and I'm a Frontend Engineer.\n          <br />\n          <br />\n          I work every day to build and launch native apps on both iOS and Android platforms and web apps.\n          <br />\n          I love working with the consumer-facing side of a product or application which inspires\n          me to give the best user experience and serve data or information easily and efficiently.\n          <br />\n          <br />\n          I love reading books. Wants to travel the world. A go-to guy on hiking.\n          Doing things that makes me uncomfortable.\n          <br />\n          <br />\n          I live in\n          {' '}\n          <b>Hong Kong</b>\n          . Working as a\n          {' '}\n          <b>Frontend Developer</b>\n          {' '}\n          for\n          <b><a style={{ color: colors.primary }} href=\"https://www.linkedin.com/company/circleyy/\"> CircleYY</a></b>\n          {/* Most of my work focuses on the\n          consumer side of the product and my job is to give the user the best user experience. */}\n        </Paragraph>\n      </div>\n      {/* <div className=\"footer-wrapper\">\n        <Footer />\n      </div> */}\n    </Content>\n  );\n}\n\nexport { About };\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport '../../App.css';\nimport './works.css';\nimport { Layout, Typography, Space } from 'antd';\n// import { AiOutlineMobile } from 'react-icons/ai';\n// import { colors } from '../../constants/themes/colors';\n\n// const meImage = require('../../assets/images/me.JPG');\n\nconst { Content } = Layout;\nconst { Title, Paragraph } = Typography;\n\nconst homeTitleStyle = {\n  color: '#211F1F',\n  fontWeight: 800,\n  fontFamily: 'ArchivoBlack-Regular',\n  // height: 12,\n};\n\ntype RowProps = {\n  title: string;\n  caption: string;\n};\n\nconst WorkRow = ({ title, caption }: RowProps) => (\n  <div className=\"caption-container\">\n    <div className=\"flex row flex-row\">\n      {/* <AiOutlineMobile className=\"icon\" /> */}\n      <Title level={2}>\n        {title}\n      </Title>\n    </div>\n    <Paragraph className=\"what-i-do-caption\">\n      {caption}\n    </Paragraph>\n  </div>\n);\n\nfunction Works() {\n  return (\n    <Content style={{ height: '100%' }} className=\"flex col-space-around parent-container\">\n      <div className=\"flex flex-col text-wrapper mt-5\">\n        <Space className=\"flex flex-col\">\n          <Title style={homeTitleStyle}>\n            What I do\n          </Title>\n          <div className=\"flex space-around col mt-2\">\n            <WorkRow title=\"Native Apps\" caption=\"Let your consumers access your business or product anywhere around the globe in both iOS and Android platforms.\" />\n            <WorkRow title=\"Frontend Web Apps\" caption=\"Build a responsive web app of your business that delivers information efficiently in our naked eye.\" />\n            <WorkRow title=\"Microservices\" caption=\"Build your services by breaking down your business/product specification into smaller pieces and connect them together.\" />\n          </div>\n        </Space>\n      </div>\n    </Content>\n  );\n}\n\nexport { Works };\n","import React, { useState } from 'react';\nimport { Menu, Layout } from 'antd';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { Home } from './pages/Home/Home';\nimport { About } from './pages/About/About';\nimport { Works } from './pages/Works/Works';\n\nconst { Content, Header } = Layout;\n\nconst navStyle = {\n  navWrapper: {\n    display: 'flex',\n    // justifyContent: 'center',\n    backgroundColor: 'transparent',\n    paddingBottomWidth: 0,\n    borderBottomWidth: 'none !important',\n  },\n};\n\n// const NavBar = () => (\n\n// );\n\nfunction App() {\n  const [current, setCurrent] = useState('home');\n\n  const handleClick = (e: any) => setCurrent(e.key);\n\n  return (\n    <Router>\n      <Header className=\"siteLayoutBackground\" style={{ padding: 0, backgroundColor: 'transparent' }}>\n        <Menu style={navStyle.navWrapper} onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link to=\"/portfolio\">Intro</Link>\n          </Menu.Item>\n          <Menu.Item key=\"about\">\n            <Link to=\"/portfolio/about\">About</Link>\n          </Menu.Item>\n          <Menu.Item key=\"works\">\n            <Link to=\"/portfolio/works\">What I do</Link>\n          </Menu.Item>\n          <Menu.Item key=\"contact\">\n            <Link to=\"/portfolio/contact\">Contact</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ height: '100%' }}>\n        <Switch>\n          <Route exact path=\"/portfolio\">\n            <Home />\n          </Route>\n          <Route path=\"/portfolio/about\">\n            <About />\n          </Route>\n          <Route path=\"/portfolio/works\">\n            <Works />\n          </Route>\n        </Switch>\n      </Content>\n    </Router>\n  );\n}\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}